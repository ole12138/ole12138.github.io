<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PAT on Jingmin's blog</title><link>https://ole12138.github.io/tags/pat/</link><description>Recent content in PAT on Jingmin's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright (c) 2020, Jingmin; All rights reserved.</copyright><lastBuildDate>Thu, 25 Jun 2020 05:24:48 +0800</lastBuildDate><atom:link href="https://ole12138.github.io/tags/pat/feed.xml" rel="self" type="application/rss+xml"/><item><title>PAT甲级习题</title><link>https://ole12138.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/pat%E4%B9%A0%E9%A2%98/</link><pubDate>Thu, 25 Jun 2020 05:24:48 +0800</pubDate><guid>https://ole12138.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/pat%E4%B9%A0%E9%A2%98/</guid><description>PAT甲级习题 栈的模拟 例1 已知入栈顺序1-N，并给定栈最大容积M。判断出栈顺序是否正确, 以及是否爆栈
题目链接
方法：栈的模拟
由于入栈是固定从1到N的，那么某元素出栈前，比它小的数都应当已经入栈。利用这个过程来确定出入栈顺序。
package com.jingmin.advanced2; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Stack; /** * @author : wangjm * @date : 2020/6/26 09:55 * @discription : https://www.nowcoder.com/pat/5/problem/4090 * 已知入栈顺序，判断出栈顺序是否正确, 以及是否爆栈: 栈的模拟 * 由于入栈是固定从1到N的，那么某元素出栈前，比它小的数都应当已经入栈 */ public class Advanced1040 { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String[] s = br.readLine().split(&amp;#34; &amp;#34;); int m = Integer.parseInt(s[0]); int n = Integer.parseInt(s[1]); int k = Integer.</description></item></channel></rss>