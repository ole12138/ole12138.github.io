<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SpringMVC源码分析 on Jingmin's blog</title><link>https://ole12138.gitee.io/tags/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><description>Recent content in SpringMVC源码分析 on Jingmin's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright (c) 2020, Jingmin; All rights reserved.</copyright><lastBuildDate>Mon, 18 Jan 2021 15:06:14 +0800</lastBuildDate><atom:link href="https://ole12138.gitee.io/tags/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/feed.xml" rel="self" type="application/rss+xml"/><item><title>SpringMVC源码分析（转载）</title><link>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E8%BD%AC%E8%BD%BD/</link><pubDate>Mon, 18 Jan 2021 15:06:14 +0800</pubDate><guid>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/springmvc%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E8%BD%AC%E8%BD%BD/</guid><description>SpringMVC源码分析（转载） 本文非原创，转载来源：https://juejin.cn/post/6863375718450593799
SpringMVC在Java后端中，是一个很重要也很常用的框架，本篇来分析一下SpringMVC的源码。版本为5.2.0。
web.xml配置 虽然使用SpringMVC不需要我们写Servlet，但SpringMVC是封装了Servlet，提供 DispatcherServlet 来帮我们处理的。 所以需要在 web.xml 配置 DispatcherServlet。
可以看出 DispatcherServlet，映射的url是 /，所以所有的请求都会被它拦截，再处理给我们。我们进去看一下。
&amp;lt;!DOCTYPE web-app PUBLIC &amp;#34;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;#34; &amp;#34;http://java.sun.com/dtd/web-app_2_3.dtd&amp;#34; &amp;gt; &amp;lt;web-app&amp;gt; &amp;lt;display-name&amp;gt;Archetype Created Web Application&amp;lt;/display-name&amp;gt; &amp;lt;!--配置前端控制器--&amp;gt; &amp;lt;servlet&amp;gt; &amp;lt;servlet-name&amp;gt;dispatcherServlet&amp;lt;/servlet-name&amp;gt; &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt; &amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt; &amp;lt;!-- 加载SpringMVC配置文件 --&amp;gt; &amp;lt;param-value&amp;gt;classpath:springmvc.xml&amp;lt;/param-value&amp;gt; &amp;lt;/init-param&amp;gt; &amp;lt;!-- 启动就加载这个Servlet --&amp;gt; &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt; &amp;lt;/servlet&amp;gt; &amp;lt;servlet-mapping&amp;gt; &amp;lt;servlet-name&amp;gt;dispatcherServlet&amp;lt;/servlet-name&amp;gt; &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt; &amp;lt;/servlet-mapping&amp;gt; //省略其他配置... &amp;lt;/web-app&amp;gt; 初始化 我们知道，Servlet初始化时，Servlet的 init()方法会被调用。我们进入 DispatcherServlet中，发现并没有该方法，那么肯定在它集成的父类上。 DispatcherServlet 继承于 FrameworkServlet，结果还是没找到，继续找它的父类 HttpServletBean。
HttpServletBean 终于找到了，HttpServletBean 继承于 HttpServlet，我们来看下这个 init() 方法。
@Override public final void init() throws ServletException { //获取配置web.</description></item></channel></rss>