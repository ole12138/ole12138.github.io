<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HttpClient on Jingmin's blog</title><link>https://ole12138.gitee.io/tags/httpclient/</link><description>Recent content in HttpClient on Jingmin's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright (c) 2020, Jingmin; All rights reserved.</copyright><lastBuildDate>Mon, 11 Jan 2021 17:08:09 +0800</lastBuildDate><atom:link href="https://ole12138.gitee.io/tags/httpclient/feed.xml" rel="self" type="application/rss+xml"/><item><title>发起HTTP请求：使用JDK11的HttpClient</title><link>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/%E5%8F%91%E8%B5%B7http%E8%AF%B7%E6%B1%82%E4%BD%BF%E7%94%A8jdk11%E7%9A%84httpclient/</link><pubDate>Mon, 11 Jan 2021 17:08:09 +0800</pubDate><guid>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/%E5%8F%91%E8%B5%B7http%E8%AF%B7%E6%B1%82%E4%BD%BF%E7%94%A8jdk11%E7%9A%84httpclient/</guid><description>发起HTTP请求：使用JDK11的HttpClient JDK11 API中原生的增加了HTTP客户端类HttpClient，用于发起HTTP请求，支持HTTP/2.
以下内容非原创，参考/转载来源：https://www.dariawan.com/tutorials/java/java-11-standard-http-client-vs-apache-httpclient/
JDK11的HttpClient使用测试：
package com.wangjm.http.connection; import com.google.common.net.UrlEscapers; import org.junit.jupiter.api.Test; import java.net.ProxySelector; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.time.Duration; /** * @author : wangjm * @date : 2021/1/11 20:47 * JDK11 API 提供了HttpClient，支持HTTP/2 * 简单使用的情况下，http和https链接的请求都是相同的 */ class JDKHttpClientUtilTest { @Test public void doTest() throws Exception { final HttpClient HTTP_CLIENT = HttpClient.newBuilder() .version(HttpClient.Version.HTTP_2) // default .followRedirects(HttpClient.Redirect.NORMAL) // Always redirect, except from HTTPS URLs to HTTP URLs. .</description></item><item><title>发起HTTP请求：使用Apache的HttpClient</title><link>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/%E5%8F%91%E8%B5%B7http%E8%AF%B7%E6%B1%82%E4%BD%BF%E7%94%A8apache%E7%9A%84httpclient/</link><pubDate>Mon, 11 Jan 2021 14:34:53 +0800</pubDate><guid>https://ole12138.gitee.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/%E5%8F%91%E8%B5%B7http%E8%AF%B7%E6%B1%82%E4%BD%BF%E7%94%A8apache%E7%9A%84httpclient/</guid><description>Java发起HTTP请求：使用Apache的HttpClient 许多小伙伴都喜欢用apache的HttpComponts里的HttpClient来向远程发起HTTP请求
从HttpComponents官网的features说明来看，当前版本(HttpClient4.5)仅支持到HTTP/1.1。 但是HttpCore.5.1BETA将支持HTTP/2，可惜还在BETA阶段。
使用方式：
项目中引入对应的maven依赖：
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.5.13&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 参考了别人的代码,简单使用：
public class HttpClientUtil { public static String doGet(String url) { String result = &amp;#34;&amp;#34;; try { // 通过址默认配置创建一个httpClient实例 @Cleanup CloseableHttpClient httpClient = HttpClients.createDefault(); // 创建httpGet远程连接实例 HttpGet httpGet = new HttpGet(url); // 设置请求头信息，鉴权 httpGet.setHeader(&amp;#34;Authorization&amp;#34;, &amp;#34;Bearer da3efcbf-0845-4fe3-8aba-ee040be542c0&amp;#34;); // 设置配置请求参数 RequestConfig requestConfig = RequestConfig.custom() // 连接主机服务超时时间 .setConnectTimeout(35000) // 请求超时时间 .setConnectionRequestTimeout(35000) // 数据读取超时时间 .setSocketTimeout(60000) .build(); // 为httpGet实例设置配置 httpGet.</description></item></channel></rss>